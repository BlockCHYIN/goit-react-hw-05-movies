{"version":3,"file":"static/js/reviews.58661be6.chunk.js","mappings":"qQAIe,SAASA,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,EAAK,mCAAG,WAAMF,GAAN,iGAEaG,EAAAA,EAAAA,IAAkBH,GAF/B,OAGoB,KADpBJ,EAFA,QAGGQ,cACLP,EAAQD,GAJN,gDAONC,EAAQ,MACRE,EAAS,mBARH,yDAAH,sDAgBX,OAJAM,EAAAA,EAAAA,YAAU,WACNH,EAAMF,KACP,CAACA,KAGA,gCACKF,IAAS,wBAAKA,IACdF,GACG,wBACKA,EAAKU,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACd,2BACI,oCAAYF,MACZ,uBAAIC,MAFCC,SAOb,0E,0MCrCdC,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,gCAElB,IAEMC,EAAgB,mCAAG,WAAMC,GAAN,uFACLF,IAAAA,IAAA,+BACKD,EADL,qDACqDG,IAFhD,cACtBC,EADsB,yBAIrBA,EAASnB,MAJY,2CAAH,sDAOhBoB,EAAkB,mCAAG,oGACPJ,IAAAA,IAAA,qCAAwCD,IADjC,cACxBI,EADwB,yBAEvBA,EAASnB,MAFc,2CAAH,qDAKlBqB,EAAiB,mCAAG,WAAMC,GAAN,uFACNN,IAAAA,IAAA,gBACVM,EADU,oBACSP,EADT,oBADM,cACvBI,EADuB,yBAItBA,EAASnB,MAJa,2CAAH,sDAOjBuB,EAAiB,mCAAG,WAAMD,GAAN,uFACNN,IAAAA,IAAA,gBACVM,EADU,4BACiBP,EADjB,oBADM,cACvBI,EADuB,yBAItBA,EAASnB,MAJa,2CAAH,sDAOjBO,EAAiB,mCAAG,WAAMe,GAAN,uFACNN,IAAAA,IAAA,gBACVM,EADU,4BACiBP,EADjB,oBADM,cACvBI,EADuB,yBAItBA,EAASnB,MAJa,2CAAH","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { fetchMovieReviews } from \"services/api\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\n\nexport default function Reviews() {\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n\n    const { postId } = useParams();\n\n    const fetch = async postId => {\n        try {\n            const data = await fetchMovieReviews(postId);\n            if (data.total_result !== 0) {\n                setData(data);\n            }\n        } catch (error) {\n            setData(null);\n            setError('Error server!!!');\n        }\n    };\n\n    useEffect(() => {\n        fetch(postId);\n    }, [postId]);\n\n    return (\n        <>\n            {error && <h2>{error}</h2>}\n            {data ? (\n                <ul>\n                    {data.results.map(({ author, content, id }) => (\n                        <li key={id}>\n                            <h3>Author:{author}</h3>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                    <p>We don't hawe any reviews for this movie.</p>\n            )}\n        </>  \n    );\n}","import axios from \"axios\";\n\nconst key = '04f04bc22a38496cedb77ffb55edd218';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const t = 5;\n\nexport const fetchSearchMovie = async search => {\n    const response = await axios.get(\n        `search/movie?api_key=${key}&language=en-US&include_adult=false&query=${search}`\n    );\n    return response.data;\n};\n\nexport const fetchTrendingMovie = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${key}`);\n    return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${key}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${key}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${key}&language=en_US`\n    );\n    return response.data;\n};\n\n"],"names":["Reviews","useState","data","setData","error","setError","postId","useParams","fetch","fetchMovieReviews","total_result","useEffect","results","map","author","content","id","key","axios","fetchSearchMovie","search","response","fetchTrendingMovie","fetchMovieDetails","movieId","fetchMovieCredits"],"sourceRoot":""}